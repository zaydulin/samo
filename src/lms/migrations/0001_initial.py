# Generated by Django 4.1.7 on 2025-08-08 18:04

import ckeditor.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Assumptioncourse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('price', models.PositiveIntegerField(verbose_name='Стоимость')),
            ],
            options={
                'verbose_name': 'Предположение курс',
                'verbose_name_plural': 'Предположение курс',
            },
        ),
        migrations.CreateModel(
            name='CategorysCourse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создание')),
                ('name', models.CharField(max_length=150, unique=True, verbose_name='Название')),
                ('slug', models.SlugField(blank=True, max_length=200, null=True, unique=True, verbose_name='URL')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('title', models.CharField(blank=True, max_length=150, null=True, verbose_name='Название')),
                ('content', models.TextField(blank=True, null=True, verbose_name='Мета-описание')),
                ('cover', models.FileField(blank=True, null=True, upload_to='category/%Y/%m/%d/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['png', 'webp', 'jpeg', 'jpg', 'svg'])], verbose_name='Обложка категории')),
                ('icon', models.FileField(blank=True, null=True, upload_to='category/%Y/%m/%d/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['png', 'webp', 'jpeg', 'jpg', 'svg'])], verbose_name='Иконка категории')),
                ('image', models.FileField(blank=True, null=True, upload_to='category/%Y/%m/%d/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['png', 'webp', 'jpeg', 'jpg', 'svg'])], verbose_name='Картинка категории')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('slug', models.SlugField(max_length=140, unique=True)),
                ('name', models.CharField(max_length=250, verbose_name='Название')),
                ('description', ckeditor.fields.RichTextField(verbose_name='Описание')),
                ('cover', models.FileField(blank=True, default='default/courseimage/1.png', null=True, upload_to='blogs/%Y/%m/%d/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['png', 'webp', 'jpeg', 'jpg', 'svg'])], verbose_name='Обложка')),
                ('image', models.FileField(blank=True, default='default/courseimage/1.png', null=True, upload_to='blogs/%Y/%m/%d/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['png', 'webp', 'jpeg', 'jpg', 'svg'])], verbose_name='Изображение')),
                ('previev', models.FileField(blank=True, default='default/imagegallery/imagegellery_images.png', null=True, upload_to='settings/%Y/%m/%d/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['png', 'webp', 'jpeg', 'jpg', 'svg'])], verbose_name='Превью')),
                ('title', models.CharField(blank=True, max_length=150, null=True, verbose_name='Название')),
                ('content', models.TextField(blank=True, null=True, verbose_name='Мета-описание')),
                ('propertytitle', models.CharField(blank=True, max_length=150, null=True, verbose_name='Мета-заголовок ссылки')),
                ('propertydescription', models.CharField(blank=True, max_length=255, null=True, verbose_name='Мета-описание ссылки')),
                ('draft', models.BooleanField(default=False, verbose_name='Черновик')),
                ('create', models.DateTimeField(auto_now=True, null=True)),
                ('price', models.PositiveIntegerField(default=0, verbose_name='Стоимость')),
                ('type', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Доступно всем'), (2, 'Только выбранным'), (3, 'Закрыто для всех')], default=2, null=True, verbose_name='Тип')),
                ('pageviews', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='Количество Просмотров')),
            ],
            options={
                'verbose_name': 'Курс',
                'verbose_name_plural': 'Курсы',
            },
        ),
        migrations.CreateModel(
            name='CourseAssistents',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bookmark_as', models.BooleanField(default=False, verbose_name='Добавялть в свою библиотеку')),
            ],
            options={
                'verbose_name': 'Ассистент',
                'verbose_name_plural': 'Ассистенты',
            },
        ),
        migrations.CreateModel(
            name='Coursecomments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create', models.DateTimeField(auto_now=True, null=True)),
                ('content', models.TextField(blank=True, null=True, verbose_name='Коментарий')),
            ],
            options={
                'verbose_name': 'Коментарий',
                'verbose_name_plural': 'Коментарий',
            },
        ),
        migrations.CreateModel(
            name='Courserewievs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create', models.DateTimeField(auto_now=True, null=True)),
                ('estimate', models.PositiveIntegerField(verbose_name='Оценка')),
                ('content', models.TextField(blank=True, null=True, verbose_name='Коментарий')),
            ],
            options={
                'verbose_name': 'Отзыв',
                'verbose_name_plural': 'Отзывы',
            },
        ),
        migrations.CreateModel(
            name='Coursesertificate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(verbose_name='Описание')),
                ('previev', models.FileField(blank=True, default='default/certificate/defaultcert.png', null=True, upload_to='certificate/%Y/%m/%d/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['png', 'webp', 'jpeg', 'jpg', 'svg'])], verbose_name='Превью')),
                ('create', models.DateTimeField(auto_now=True, null=True)),
                ('published', models.BooleanField(default=False)),
                ('height', models.PositiveIntegerField(default=0, verbose_name='Высота')),
                ('width', models.PositiveIntegerField(default=0, verbose_name='Ширина')),
            ],
            options={
                'verbose_name': 'Сертификат курса',
                'verbose_name_plural': 'Сертификаты курсов',
            },
        ),
        migrations.CreateModel(
            name='Coursesertificateuser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create', models.DateTimeField(auto_now=True, null=True)),
                ('certificate', models.FileField(blank=True, null=True, upload_to='certificates/%Y/%m/%d/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'png', 'jpg', 'webp'])], verbose_name='Сертификат')),
            ],
            options={
                'verbose_name': 'Полученый сертификат курса',
                'verbose_name_plural': 'Полученые сертификаты курсов',
            },
        ),
        migrations.CreateModel(
            name='CourseSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_start', models.DateField(blank=True, null=True, verbose_name='С даты')),
                ('data_end', models.DateField(blank=True, null=True, verbose_name='По дату')),
            ],
            options={
                'verbose_name': 'Настройка',
                'verbose_name_plural': 'Настройки',
            },
        ),
        migrations.CreateModel(
            name='Courseuser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.PositiveSmallIntegerField(choices=[(1, 'Оплата не прошла'), (2, 'Оплачено')], default=1, verbose_name='Статус')),
                ('type', models.PositiveSmallIntegerField(choices=[(1, 'Проходит'), (2, 'Пройден')], default=1, verbose_name='Тип')),
                ('create', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'verbose_name': 'Прохождение курса',
                'verbose_name_plural': 'Прохождение курсов',
            },
        ),
        migrations.CreateModel(
            name='Files',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Видео'), (2, 'Аудио'), (3, 'Документ')], default=2, null=True, verbose_name='Тип')),
                ('name', models.CharField(blank=True, max_length=250, null=True, verbose_name='Название')),
                ('files', models.FileField(blank=True, null=True, upload_to='coursemedia/%Y/%m/%d/', verbose_name='Файл')),
                ('content', models.TextField(blank=True, null=True, verbose_name='Вставка')),
                ('link', models.BooleanField(default=False, verbose_name='Загрузить на хостинг')),
                ('create', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'verbose_name': 'Файл',
                'verbose_name_plural': 'Файлы',
            },
        ),
        migrations.CreateModel(
            name='HintsToQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('right_answer', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Не правильный'), (2, 'Правильный')], default=1, null=True, verbose_name='Правильный ответ')),
            ],
            options={
                'verbose_name': 'Подсказка',
                'verbose_name_plural': 'Подсказки',
            },
        ),
        migrations.CreateModel(
            name='HomeWork',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', ckeditor.fields.RichTextField(verbose_name='Ответ пользователя')),
            ],
            options={
                'verbose_name': 'Домашнее задание',
                'verbose_name_plural': 'Домашние задания',
            },
        ),
        migrations.CreateModel(
            name='HomeWorkFiles',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Видео'), (2, 'Аудио'), (3, 'Документ')], default=3, null=True, verbose_name='Тип')),
                ('name', models.CharField(blank=True, max_length=250, null=True, verbose_name='Название')),
                ('file', models.FileField(blank=True, null=True, upload_to='homework_files/%Y/%m/%d/', verbose_name='Файл')),
                ('content', models.TextField(blank=True, null=True, verbose_name='Комментарий')),
                ('link', models.BooleanField(default=False, verbose_name='Загрузить на хостинг')),
                ('created_at', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'verbose_name': 'Файл домашнего задания',
                'verbose_name_plural': 'Файлы домашних заданий',
            },
        ),
        migrations.CreateModel(
            name='Modules',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, verbose_name='Название')),
                ('position', models.PositiveIntegerField(blank=True, null=True, verbose_name='Позиция')),
            ],
            options={
                'verbose_name': 'Модуль',
                'verbose_name_plural': 'Модули',
            },
        ),
        migrations.CreateModel(
            name='Needcourse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.PositiveSmallIntegerField(choices=[(1, 'Опубликован'), (2, 'Закрыт'), (3, 'Найден исполнитель')], default=1, verbose_name='Тип')),
                ('name', models.CharField(max_length=250, verbose_name='Название')),
                ('description', ckeditor.fields.RichTextField(db_index=True, verbose_name='Описание')),
                ('slug', models.SlugField(max_length=140, unique=True)),
                ('price', models.PositiveIntegerField(verbose_name='Стоимость')),
            ],
            options={
                'verbose_name': 'Нужен курс',
                'verbose_name_plural': 'Нужен курс',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('right_answer', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Не правильный'), (2, 'Правильный')], default=1, null=True, verbose_name='Правильный ответ')),
                ('title', models.CharField(max_length=250, verbose_name='Заголовок')),
                ('second_title', models.CharField(blank=True, max_length=250, null=True, verbose_name='Заголовок 2')),
                ('image', models.FileField(blank=True, default='default/blogs/cover.png', null=True, upload_to='blogs/%Y/%m/%d/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['png', 'webp', 'jpeg', 'jpg', 'svg'])], verbose_name='Изображение')),
                ('description', models.TextField(verbose_name='Текст')),
                ('left_text', models.CharField(blank=True, max_length=250, null=True, verbose_name='Левый текст для 6 теста')),
                ('right_text', models.CharField(blank=True, max_length=250, null=True, verbose_name='Правый текст для 6 теста')),
                ('left_file', models.FileField(blank=True, default='default/blogs/cover.png', null=True, upload_to='blogs/%Y/%m/%d/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['png', 'webp', 'jpeg', 'jpg', 'svg'])], verbose_name='Левое Изображение 6 теста')),
                ('right_file', models.FileField(blank=True, default='default/blogs/cover.png', null=True, upload_to='blogs/%Y/%m/%d/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['png', 'webp', 'jpeg', 'jpg', 'svg'])], verbose_name='Правое Изображение 6 теста')),
            ],
            options={
                'verbose_name': 'Вопрос',
                'verbose_name_plural': 'Вопросы',
            },
        ),
        migrations.CreateModel(
            name='Qwiz',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Домашнее задания'), (2, 'Тесты'), (3, 'Тесты с картинками'), (4, 'Выборка'), (5, 'Заполните пропуск'), (6, 'Выберите соответствие')], default=1, null=True, verbose_name='Тип')),
                ('name', models.CharField(max_length=250, verbose_name='Название')),
                ('description', models.TextField(verbose_name='Описание')),
                ('position', models.PositiveIntegerField(blank=True, null=True, verbose_name='Позиция')),
                ('point', models.PositiveIntegerField(blank=True, default=0, null=True)),
            ],
            options={
                'verbose_name': 'Задание',
                'verbose_name_plural': 'Задания',
            },
        ),
        migrations.CreateModel(
            name='Schedulestream',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создание')),
                ('data', models.DateField(blank=True, null=True, verbose_name='Дата')),
                ('time_start', models.TimeField(blank=True, null=True, verbose_name='Время начало')),
                ('time_end', models.TimeField(blank=True, null=True, verbose_name='Время конца')),
                ('link', models.CharField(blank=True, max_length=255, null=True, verbose_name='Ссылка')),
                ('logo', models.FileField(blank=True, null=True, upload_to='settings/%Y/%m/%d/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['png', 'webp', 'jpeg', 'jpg', 'svg'])], verbose_name='Лого')),
                ('cover', models.FileField(blank=True, null=True, upload_to='settings/%Y/%m/%d/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['png', 'webp', 'jpeg', 'jpg', 'svg'])], verbose_name='Обложка')),
            ],
            options={
                'verbose_name': 'График трансляций',
                'verbose_name_plural': 'Графики трансляций',
            },
        ),
        migrations.CreateModel(
            name='StreamSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Дата')),
                ('time', models.PositiveIntegerField(blank=True, null=True, verbose_name='Длительность')),
                ('time_start', models.TimeField(verbose_name='Время начала')),
                ('time_end', models.TimeField(verbose_name='Время окончания')),
            ],
            options={
                'verbose_name': 'Сессия трансляции',
                'verbose_name_plural': 'Сессии трансляций',
            },
        ),
        migrations.CreateModel(
            name='Themes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, verbose_name='Название')),
                ('description', models.TextField(verbose_name='Описание')),
                ('position', models.PositiveIntegerField(blank=True, null=True, verbose_name='Позиция')),
                ('point', models.PositiveIntegerField(blank=True, null=True, verbose_name='Баллов для прохождения')),
                ('point_status', models.BooleanField(default=False, verbose_name='Начислять баллы')),
                ('attempts', models.PositiveIntegerField(null=True, verbose_name='Попытки за прохождения в минуты')),
                ('attempts_status', models.BooleanField(default=False, verbose_name='Ограничить попытки прохождениея')),
                ('test_duration', models.PositiveIntegerField(blank=True, null=True, verbose_name='Время на тест')),
                ('access_type', models.BooleanField(default=False, verbose_name='Доступна после прохождения предыдущего')),
                ('show_answer', models.BooleanField(default=False, verbose_name='После прохождения показывать ответы')),
                ('home_work', models.TextField(blank=True, null=True, verbose_name='Домашнее задание')),
                ('home_work_status', models.BooleanField(default=False, verbose_name='Наличие домашнего задания')),
            ],
            options={
                'verbose_name': 'Тема',
                'verbose_name_plural': 'Темы',
                'ordering': ['position'],
            },
        ),
        migrations.CreateModel(
            name='ThemesQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Прошел'), (2, 'Проходит'), (3, 'Не сдал')], default=2, null=True, verbose_name='Статус')),
                ('qwiz', models.TextField(blank=True, max_length=900, null=True)),
                ('data', models.DateTimeField(blank=True, null=True)),
                ('point', models.PositiveIntegerField(blank=True, null=True)),
                ('correctanswer', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('last_attempt_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('themes', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='themes_questions', to='lms.themes')),
            ],
            options={
                'verbose_name': 'Контроль прохождения',
                'verbose_name_plural': 'Контроли прохождения',
            },
        ),
    ]
