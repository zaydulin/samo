# Generated by Django 4.1.7 on 2025-08-08 18:04

from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Signal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('signal_type', models.CharField(max_length=50)),
                ('sdp', models.TextField(blank=True, null=True)),
                ('candidate', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='VideoChatFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(default='default/nophoto.png', upload_to='root/', verbose_name='svt-ФАЙЛ текст')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Дата отправки')),
            ],
            options={
                'verbose_name': 'Файл в конференции',
                'verbose_name_plural': 'Файл в конференции',
            },
        ),
        migrations.CreateModel(
            name='VideoChatMessages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='Сообщения')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Дата отправки')),
            ],
            options={
                'verbose_name': 'Сообщение в конференции',
                'verbose_name_plural': 'Сообщения в конференции',
            },
        ),
        migrations.CreateModel(
            name='VideoChatRoom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.PositiveSmallIntegerField(choices=[(1, 'Общедоступная'), (2, 'Доступна только по ключу')], default=1, verbose_name='Тип')),
                ('slug', models.SlugField(max_length=160, unique=True, verbose_name='Ссылка')),
                ('token', models.CharField(max_length=160, unique=True, verbose_name='Токен')),
                ('descriptions', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('logo', models.ImageField(default='default/nophoto.png', upload_to='root/', verbose_name='Логотип')),
                ('cover', models.ImageField(default='default/nophoto.png', upload_to='root/', verbose_name='Обложка')),
                ('banner', models.ImageField(default='default/nophoto.png', upload_to='root/', verbose_name='Банер')),
                ('name', models.CharField(blank=True, max_length=200, null=True, verbose_name='Название комнаты')),
                ('create', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата создания')),
                ('start_data', models.DateField(blank=True, null=True, verbose_name='Дата начало конференции')),
                ('start_time', models.TimeField(blank=True, null=True, verbose_name='Время начало конференции')),
                ('time', models.CharField(blank=True, max_length=200, null=True, verbose_name='Длительность')),
                ('end_data', models.DateField(blank=True, null=True, verbose_name='Дата конца конференции')),
                ('end_time', models.TimeField(blank=True, null=True, verbose_name='Время конца конференции')),
                ('is_closed', models.BooleanField(default=True)),
                ('is_start', models.BooleanField(default=False)),
                ('high_resolution', models.BooleanField(default=False)),
                ('count_participants_allowed', models.PositiveSmallIntegerField(default=0, verbose_name='Количество разрешенных участников')),
                ('count_participants_online', models.PositiveSmallIntegerField(default=0, verbose_name='Количество разрешенных онлайн')),
                ('count_participants', models.PositiveSmallIntegerField(default=0, verbose_name='Количество разрешенных онлайн')),
                ('dialog', models.FileField(blank=True, default='default/nophoto.png', null=True, upload_to='root/', verbose_name='svt-ФАЙЛ текст')),
                ('signal_type', models.CharField(max_length=50)),
                ('sdp', models.TextField(blank=True, null=True)),
                ('candidate', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Конференция',
                'verbose_name_plural': 'Конференции',
            },
        ),
        migrations.CreateModel(
            name='VideoChatUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hand', models.BooleanField(default=False)),
                ('desktop', models.BooleanField(default=False)),
                ('sound', models.BooleanField(default=True)),
                ('sound_root', models.BooleanField(default=False)),
                ('video_root', models.BooleanField(default=False)),
                ('banned', models.BooleanField(default=False)),
                ('saved_video', models.BooleanField(default=False)),
                ('key', models.CharField(max_length=160, unique=True, verbose_name='ключ')),
                ('name', models.CharField(blank=True, max_length=160, verbose_name='Имя')),
                ('dialog', models.FileField(blank=True, null=True, upload_to='root/', verbose_name='svt-ФАЙЛ текст')),
                ('video', models.FileField(blank=True, null=True, upload_to='root/', verbose_name='Видео')),
                ('offer', models.TextField()),
                ('answer', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Пользователь для конференции',
                'verbose_name_plural': 'Пользователи для конференции',
            },
        ),
    ]
